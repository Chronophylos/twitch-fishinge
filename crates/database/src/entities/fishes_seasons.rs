//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "fishes_seasons")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub fish_id: i32,
    pub season_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::fishes::Entity",
        from = "Column::FishId",
        to = "super::fishes::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Fishes,
    #[sea_orm(
        belongs_to = "super::seasons::Entity",
        from = "Column::SeasonId",
        to = "super::seasons::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Seasons,
}

impl Related<super::fishes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Fishes.def()
    }
}

impl Related<super::seasons::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Seasons.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
